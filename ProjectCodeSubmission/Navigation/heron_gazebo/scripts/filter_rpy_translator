#!/usr/bin/env python

import rospy
import tf
from geometry_msgs.msg import Vector3Stamped
from nav_msgs.msg import Odometry

def odom_cb(msg):
    global rpy_pub

    rpy = Vector3Stamped()
    rpy.header = msg.header
    m_x = msg.pose.pose.orientation.x
    m_y = msg.pose.pose.orientation.y
    m_z = msg.pose.pose.orientation.z
    m_w = msg.pose.pose.orientation.w

    v = tf.transformations.euler_from_quaternion([m_x, m_y, m_z, m_w])
    rpy.vector.x = v[0]
    rpy.vector.y = v[1]
    rpy.vector.z = v[2]

    rpy_pub.publish(rpy)

def translate():
    global rpy_pub
    
    rospy.init_node("filter_quat_to_euler")
    
    rpy_pub = rospy.Publisher("estimate/rpy", Vector3Stamped, queue_size=1)
    quat_sub = rospy.Subscriber("estimate", Odometry, odom_cb)

    rospy.spin()

if __name__ == '__main__':
    translate()